package ProjetoSI;
import ProjetoSI.*;
import robocode.*;
import robocode.ScannedRobotEvent;

// Consultar ações na lista de ações
query "consulta_acoes"
	acao: Acao()
end

// Excluí ações com prioridades conflitantes
rule "DEPURAR ACOES"
	when
		$acao: Acao($tipo: tipo, $prioridade1: prioridade)
		$acao2: Acao(tipo == $tipo, $prioridade2: prioridade)
		eval($prioridade1 > $prioridade2)
	then
		retract($acao2);
		System.out.println("> Depurar acoes por prioridade...");
end

// Gira o radar quando não há alvo selecionado
rule "GIRAR RADAR"
	when
		not (exists ScannedRobotEvent())
	then
		insert(new Acao(Acao.GIRAR_RADAR_DIR, 360, 1));
		System.out.println("> Girar radar...");
end

// Se movimentar
rule "MOVIMENTAR"
	when
		$status : EstadoRobot()		
	then
		insert(new Acao(Acao.MOVIMENTO_CIRCULO, 500, 1));	
		System.out.println("> Movimentar em circulo...");
end

// Choque com muro ou com integrante do time: avançar
rule "CHOQUE"
	when
		$status : EstadoRobot($anguloRelativo: heading)		
		HitWallEvent()|| (HitRobotEvent($nome: name) && not (eval (Util.NotFromTeam($nome))))
	then
		insert(new Acao(Acao.AVANCAR, 500, 5));
		System.out.println ("> Choque > Mudar trajetória...");
end

// Dispara contra o alvo na mira
rule "DISPARAR"
   when
		$status : EstadoRobot()
		$alvoEscaneado: ScannedRobotEvent($nomeAlvo: name)
		eval (Util.NotFromTeam($nomeAlvo))
   then	
		double anguloRelativoCano = Util.anguloRelativo($status.getHeading(), $status.getGunHeading());
		insert(new Acao(Acao.GIRAR_CANHAO_DIR, ($alvoEscaneado.getBearing() - anguloRelativoCano), 5));
		double anguloRelativoRadar =  Util.anguloRelativo($status.getHeading(), $status.getRadarHeading());
		insert(new Acao(Acao.GIRAR_RADAR_DIR, ($alvoEscaneado.getBearing() - anguloRelativoRadar), 5));	
		insert(new Acao(Acao.DISPARAR, Math.min(Rules.MAX_BULLET_POWER, 0.10*$status.getEnergy()), 5));
		System.out.println("> Mirar...\n> Disparar Contra "+$nomeAlvo);
end

// Quando ocorre um choque com outro robô que não é do time: mira e atira
rule "CHOQUE COM ROBOT INIMIGO > MIRAR > ATIRAR"
	when
		$status : EstadoRobot()
		HitRobotEvent($nome: name, $anguloRelativo: bearing)
		eval (Util.NotFromTeam($nome))
	then
		double anguloRelativoCano = Util.anguloRelativo($status.getHeading(), $status.getGunHeading());
		insert(new Acao(Acao.GIRAR_CANHAO_DIR, ($anguloRelativo - anguloRelativoCano), 5));
		double anguloRelativoRadar =  Util.anguloRelativo($status.getHeading(), $status.getRadarHeading());
		insert(new Acao(Acao.GIRAR_RADAR_DIR, ($anguloRelativo - anguloRelativoRadar), 1));		
		insert(new Acao(Acao.DISPARAR, Math.min(Rules.MAX_BULLET_POWER, 0.10*$status.getEnergy()), 5));
		insert(new Acao(Acao.AVANCAR, 100, 5));
		System.out.println("> Choque com "+$nome+" > mirar > disparar...\n> Afastar...");
end